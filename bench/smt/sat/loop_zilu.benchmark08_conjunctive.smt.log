sat
(
  (define-fun k!80 ((x!0 Int)) Int
    (let ((a!1 (ite (<= 0 x!0) (ite (<= 1 x!0) (ite (<= 2 x!0) 2 1) 0) (- 1))))
      (ite (<= (- 1) x!0) a!1 (- 2))))
  (define-fun inv ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
    (let ((a!1 (or (and (= (k!80 x!0) 2) (not (<= 1 x!1)) (= (k!80 x!2) 1))
                   (and (= (k!80 x!0) 0) (not (<= 1 x!1)) (= (k!80 x!2) 0))
                   (and (= (k!80 x!0) 2) (<= 1 x!1) (= (k!80 x!2) 2))
                   (and (= (k!80 x!0) 1) (not (<= 1 x!1)) (= (k!80 x!2) 1))
                   (and (= (k!80 x!0) 1) (not (<= 1 x!1)) (= (k!80 x!2) 0))
                   (and (= (k!80 x!0) 2) (not (<= 1 x!1)) (= (k!80 x!2) 0)))))
      (and a!1 (<= 0 x!1))))
)

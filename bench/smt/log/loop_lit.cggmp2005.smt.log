sat
(
  (define-fun inv ((x!0 Int) (x!1 Int)) Bool
    (let ((a!1 (not (<= (+ x!0 (* (- 1) x!1)) 0)))
          (a!2 (not (>= (+ x!0 (* (- 1) x!1)) (- 5))))
          (a!3 (not (>= (+ x!0 (* (- 1) x!1)) (- 2))))
          (a!4 (not (>= (+ x!0 (* (- 1) x!1)) 1)))
          (a!5 (not (<= (+ x!0 (* (- 1) x!1)) (- 10))))
          (a!6 (not (<= (+ x!0 (* (- 1) x!1)) (- 9))))
          (a!7 (not (<= (+ x!0 (* (- 1) x!1)) (- 6))))
          (a!8 (not (<= (+ x!0 (* (- 1) x!1)) (- 3)))))
      (and (or (not (<= x!1 6)) a!1)
           (or (not (>= x!0 2)) (not (>= x!1 10)))
           (or (not (>= x!1 9)) a!2)
           (or (not (>= x!1 8)) a!3)
           (or (not (>= x!1 7)) a!4)
           (not (<= x!1 5))
           a!5
           (or (not (<= x!1 9)) a!6)
           (or (not (<= x!1 8)) a!7)
           (or (not (<= x!1 7)) a!8))))
)

(set-logic HORN)
(declare-fun |inv| (Int Int) Bool)
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (< (+ x (* -1 y)) 0) (inv x y))))
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (and (inv x y) (< (+ x (* -1 y)) 0) (and (< x 0) (< y 0))  (and (= xp (+ x 7)) (= yp (+ y -10)))) (inv xp yp))))
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (and (inv x y) (< (+ x (* -1 y)) 0) (and (>= x 0) (< y 0)) (not (or  (and (< x 0) (< y 0)))) (and (= xp (+ x 10)) (= yp (+ y -10)))) (inv xp yp))))
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (and (inv x y) (< (+ x (* -1 y)) 0) (and (< x 0) (>= y 0)) (not (or  (and (< x 0) (< y 0)) (and (>= x 0) (< y 0)))) (and (= xp (+ x 7)) (= yp (+ y 3)))) (inv xp yp))))
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (and (inv x y) (< (+ x (* -1 y)) 0) (and (>= x 0) (>= y 0)) (not (or  (and (< x 0) (< y 0)) (and (>= x 0) (< y 0)) (and (< x 0) (>= y 0)))) (and (= xp (+ x 10)) (= yp (+ y 3)))) (inv xp yp))))
(assert (forall ((x Int) (y Int) (xp Int) (yp Int)) (=> (and (not (< (+ x (* -1 y)) 0)) (inv x y)) (and (>= (+ x (* -1 y)) 0) (<= (+ x (* -1 y)) 16)))))
(check-sat)
(get-model)
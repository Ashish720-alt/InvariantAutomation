
function {:existential true} inv(x: int, y: int, z: int, w: int): bool;
procedure main()
{
  var x, y, z, w: int;
  
  assume (x*1)+(y*0)+(z*0)+(w*0)==0 && (x*0)+(y*1)+(z*0)+(w*0)==0 && (x*0)+(y*0)+(z*1)+(w*0)==0 && (x*0)+(y*0)+(z*0)+(w*1)==0;
  while ((x*0)+(y*1)+(z*0)+(w*0)<10000)
  invariant inv(x, y, z, w);
  {
    
    
    if ((x*1)+(y*0)+(z*0)+(w*0)>=4) {
        x := 1*x+0*y+0*z+0*w+1;
y := 0*x+1*y+0*z+0*w+100;
z := 0*x+0*y+1*z+0*w+10;
w := 0*x+0*y+0*z+1*w+1;

    }

    if ((x*-100)+(y*0)+(z*1)+(w*0)>=0 && (x*1)+(y*0)+(z*0)+(w*0)<4 && (x*0)+(y*1)+(z*0)+(w*-10)>0) {
        x := 1*x+0*y+0*z+0*w+1;
y := 0*x+1*y+0*z+0*w+100;
z := 0*x+0*y+1*z+0*w+10;
w := 0*x+0*y+0*z+1*w+1;

    }

    if ((x*1)+(y*0)+(z*0)+(w*0)<4 && (x*0)+(y*1)+(z*0)+(w*-10)<=0 || (x*1)+(y*0)+(z*0)+(w*0)<4 && (x*-100)+(y*0)+(z*1)+(w*0)<0 || (x*1)+(y*0)+(z*0)+(w*0)<4 && (x*1)+(y*0)+(z*0)+(w*0)>=4) {
        x := 1*x+0*y+0*z+0*w+1;
y := 0*x+1*y+0*z+0*w+100;
z := 0*x+0*y+1*z+0*w+10;
w := 0*x+0*y+0*z+1*w+1;

    }

  }
  assert (x*1)+(y*0)+(z*0)+(w*0)>=4 && (x*0)+(y*1)+(z*0)+(w*0)<=2;
}
